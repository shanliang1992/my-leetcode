class Solution {
public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        std::sort(candidates.begin(),candidates.end());
        std::vector<std::vector<int>> results;
        for (int i = 0; i < candidates.size(); i++) {
            if (candidates[i] > target) break;
            if (candidates[i] == target) results.push_back(std::vector<int> {candidates[i]});
            std::vector<int> cand_tmp(candidates.begin()+i+1, candidates.end());
            auto results_tmp = combinationSum2(cand_tmp, target-candidates[i]);
            for (auto  result:results_tmp) {
                result.push_back(candidates[i]);
                results.push_back(result);
            }
        }
        std::sort(results.begin(),results.end());
        results.erase(unique(results.begin(), results.end()), results.end());
        return std::move(results);        
    }
};
