/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if (!l1) return l2;
        if (!l2) return l1;
        if (!l1->next) {
            if (!l2->next) 
                if (l1->val > l2->val) {
                    l2->next =l1;
                    return l2;
                }
                else {
                    l1->next = l2;
                    return l1;
                }
            ListNode * result = l2;
            while (l2->next && l2->next->val < l1->val) {
                l2 = l2->next;
            }
            ListNode *tmp = l2->next;
            l2->next = l1;
            l1->next = tmp;
            return result; 
        }
        if (l1->val > l2->val) {
            ListNode *tmp = l1;
            l1 = l2;
            l2 = tmp;
        }
        ListNode* result = l1;
        while (l2) {
            while (l1->next && l2->val > l1->next->val ) {
                l1 = l1->next;
            }
            ListNode *tmp = l1->next;
            l1->next = l2;
            l2 = l2->next;
            l1->next->next = tmp;
            l1 = l1->next;
            if (!l1) break;
        }
        if (l2) l1->next =l2;
        return result;
    }
};
