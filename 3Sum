class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        std::sort(nums.begin(),nums.end());
        std::vector<std::vector<int>> result;
        unsigned int nums_size = nums.size();
        if (nums_size < 3) return result;
        for (unsigned int begin = 0; begin < nums_size - 2; begin++) {
            if (nums[begin] > 0) break;
            if (begin > 0 && nums[begin - 1] == nums[begin]) continue;
            unsigned int mid = begin + 1;
            unsigned int end = nums_size - 1;
            while (mid < end) {
                if (nums[begin] + nums[mid] + nums[end] > 0) end--;
                else if (nums[begin] + nums[mid] + nums[end] < 0) mid++;
                else{
                    result.push_back(std::vector<int>{nums[begin], nums[mid], nums[end]});
                    while (mid < end && nums[mid+1] == nums[mid]) mid++;
                    while (mid < end && nums[end-1] == nums[end]) end--;
                    mid++;
                    end--;
                }
            }
        }
        return result;
    }
};
