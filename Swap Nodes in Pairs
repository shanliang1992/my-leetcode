/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        ListNode* work = head;
        if (!head || !head->next) return head;
        head = head->next;
        ListNode* after = head->next;
        head->next = work;
        work->next = after;
        while (work->next && work->next->next) {
            ListNode *before = work;
            work = work->next;
            after = work->next->next;
            before->next = work->next;
            before->next->next = work;
            work->next = after;
        }
        return head;
    }
};
