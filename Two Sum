class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        std::unordered_map<int , unsigned int> Map;
        for (unsigned int i = 0; i != nums.size(); i++) {
            int aim = target - nums[i];
            if (Map.count(aim)) {
                return vector<int>{(int)Map.find(aim)->second, (int)i};
            }
            else Map.insert(std::make_pair(nums[i], i));
        }
        return vector<int>{0};
    }
};
